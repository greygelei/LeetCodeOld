class Solution {
    public String longestPalindrome(String s) {
        int[][] dp = new int[s.length()][s.length()];
        int left = 0,right = 0,maxlen = 0;
        for (int i = 0; i < s.length(); i++){
        	for (int j = 0; j <= i; j++){
        		if(i == j){
        			dp[j][i] = 1;
        		} else if(j == (i - 1)){
        			dp[j][i] = s.charAt(i) == s.charAt(j) ? 1 : 0;
        		} else if(j < (i - 1)){
        			if(s.charAt(i) == s.charAt(j)){
        				if(dp[j + 1][i - 1] == 1){
        					dp[j][i] = 1;
        				}
        			}
        		}
        		if(dp[j][i] == 1){
        			if(i - j + 1 > maxlen){
        				maxlen = i - j + 1;
        				left = j;
        				right = i;
        			}
        		}
        	}
        }
        return s.substring(left, right + 1);
    }
}
