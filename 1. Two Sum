class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> m_vect;
        set<int> m_set;
	    vector<int>::iterator front = nums.begin();
        while(front < nums.end())
        {
            m_set.insert(*front);
            front++;
        }
        front = nums.begin();
        vector<int>::iterator back = nums.end();
        int i = 0;
        int j;
        while(front < back){
            if(m_set.count(target - (*front)) > 0)
            {
                m_vect.push_back(i);
                j = nums.size() - 1;
                back--;
                while(back > front){
                    if(target - *front == *back)
                    {
                        m_vect.push_back(j);
                        break;
                    }
                    j--;
                    back--;
                }
                if(m_vect.size() > 1)
                return m_vect;
                else{
                    back = nums.end();
                    m_vect.pop_back();
                }
            }
            
            i++;
            front++;
        }
        return m_vect;
    }
};
