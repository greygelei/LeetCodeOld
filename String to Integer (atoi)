class Solution {
public:
    void trim(string &str){
    	if(str.empty()){
	    	return;
	    }
	    str.erase(0,str.find_first_not_of(" "));
    }
    
    int myAtoi(string str) {
    trim(str);
	//cout << str << endl;
	long long a = 0;
	if(str[0] == '+' || str[0] == '-')
	{
		if(str[0] == '+')
		{
			for (int i = 1; i < str.length(); i++)
			{

				if((str[i] - '0') <= 9 && (str[i] - '0') >= 0){
					a = a * 10 + (str[i] - '0');
                    if(a > 2147483647)
                        return 2147483647;
                }
				else
					return a;
			}
			//cout << a;
			return a;
		}
		else
		{
			for (int i = 1; i < str.length(); i++)
			{

				if((str[i] - '0') <= 9 && (str[i] - '0') >= 0){
					a = a * 10 + (str[i] - '0');
                    if(-a < -2147483648)
                        return -2147483648;
                }
				else
					return -a;
			}
			//cout << -a;
			return -a;
		}
	}
	else
	{
		for (int i = 0; i < str.length(); i++)
		{

			if((str[i] - '0') <= 9 && (str[i] - '0') >= 0){
				a = a * 10 + (str[i] - '0');
                if(a > 2147483647)
                    return 2147483647;
            }
			else
				return a;
		}
		//cout << a;
		return a;
	}
	return a;
    }
};
